{"version":3,"sources":["../../../src/model/transactions/multisigWrapper.js"],"names":["multisigWrapper","senderPublicKey","innerEntity","due","network","timeStamp","Helpers","createNEMTimeStamp","version","Network","getVersion","data","Objects","create","TransactionTypes","multisigTransaction","custom","Fees","entity","extendObj"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;AAUA,IAAIA,kBAAkB,SAAlBA,eAAkB,CAASC,eAAT,EAA0BC,WAA1B,EAAuCC,GAAvC,EAA4CC,OAA5C,EAAqD;AAC1E,MAAIC,YAAYC,kBAAQC,kBAAR,EAAhB;AACG,MAAIC,UAAUC,kBAAQC,UAAR,CAAmB,CAAnB,EAAsBN,OAAtB,CAAd;AACA,MAAIO,OAAOC,kBAAQC,MAAR,CAAe,uBAAf,EAAwCC,2BAAiBC,mBAAzD,EAA8Ed,eAA9E,EAA+FI,SAA/F,EAA0GF,GAA1G,EAA+GK,OAA/G,EAAwHJ,OAAxH,CAAX;AACA,MAAIY,SAAS;AACT,WAAOC,eAAKF,mBADH;AAET,kBAAcb;AAFL,GAAb;AAIA,MAAIgB,SAASZ,kBAAQa,SAAR,CAAkBR,IAAlB,EAAwBK,MAAxB,CAAb;AACA,SAAOE,MAAP;AACH,CAVD;;kBAYelB,e","file":"multisigWrapper.js","sourcesContent":["import Network from '../network';\nimport Helpers from '../../utils/helpers';\nimport TransactionTypes from '../transactionTypes';\nimport Fees from '../fees';\nimport Objects from '../objects';\n\n/**\n * Wrap a transaction in a multisignature transaction\n *\n * @param {string} senderPublicKey - The sender public key\n * @param {object} innerEntity - The transaction entity to wrap\n * @param {number} due - The transaction deadline in minutes\n * @param {number} network - A network id\n *\n * @return {object} - A [MultisigTransaction]{@link http://bob.nem.ninja/docs/#multisigTransaction} object\n */\nlet multisigWrapper = function(senderPublicKey, innerEntity, due, network) {\n\tlet timeStamp = Helpers.createNEMTimeStamp();\n    let version = Network.getVersion(1, network);\n    let data = Objects.create(\"commonTransactionPart\")(TransactionTypes.multisigTransaction, senderPublicKey, timeStamp, due, version, network);\n    let custom = {\n        'fee': Fees.multisigTransaction,\n        'otherTrans': innerEntity\n    };\n    let entity = Helpers.extendObj(data, custom);\n    return entity;\n}\n\nexport default multisigWrapper;"]}