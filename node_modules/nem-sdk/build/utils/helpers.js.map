{"version":3,"sources":["../../src/utils/helpers.js"],"names":["needsSignature","multisigTransaction","data","transaction","signer","account","publicKey","otherTrans","i","signatures","length","meta","cosignatoryOf","k","haveTx","hash","array","getTransactionIndex","haveCosig","pubKey","cosignatoryAccount","NEM_EPOCH","Date","UTC","createNEMTimeStamp","Math","floor","now","fixPrivateKey","privateKey","replace","slice","isPrivateKeyValid","console","error","isHexadecimal","isPublicKeyValid","createTimeStamp","getTimestampShort","date","dd","getDate","mm","getMonth","yyyy","getFullYear","convertDateToString","toDateString","extendObj","arguments","key","hasOwnProperty","str","match","searchMosaicDefinitionArray","mosaicDefinitionArray","keys","result","mosaic","id","name","Format","mosaicIdToName","grep","items","callback","filtered","len","item","cond","push","isTextAmountValid","n","nn","Number","toString","isNaN","isFinite","cleanTextAmount","formatEndpoint","endpoint","host","port","isJSON","JSON","parse","e","module","exports"],"mappings":"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","file":"helpers.js","sourcesContent":["import convert from './convert';\nimport Format from './format';\n\n/**\n * Check if a multisig transaction needs signature\n *\n * @param {object} multisigTransaction - A multisig transaction\n * @param {object} data - An account data\n *\n * @return {boolean} - True if it needs signature, false otherwise\n */\nlet needsSignature = function(multisigTransaction, data) {\n    if (multisigTransaction.transaction.signer === data.account.publicKey) {\n        return false;\n    }\n    if (multisigTransaction.transaction.otherTrans.signer === data.account.publicKey) {\n        return false;\n    }\n    // Check if we're already on list of signatures\n    for (let i = 0; i < multisigTransaction.transaction.signatures.length; i++) {\n        if (multisigTransaction.transaction.signatures[i].signer === data.account.publicKey) {\n            return false;\n        }\n    }\n\n    if (!data.meta.cosignatoryOf.length) {\n        return false;\n    } else {\n        for (let k = 0; k < data.meta.cosignatoryOf.length; k++) {\n            if (data.meta.cosignatoryOf[k].publicKey === multisigTransaction.transaction.otherTrans.signer) {\n                return true;\n            } else if (k === data.meta.cosignatoryOf.length - 1) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Check if a transaction is already present in an array of transactions\n *\n * @param {string} hash - A transaction hash\n * @param {array} array - An array of transactions\n *\n * @return {boolean} - True if present, false otherwise\n */\nlet haveTx = function(hash, array) {\n    let i = null;\n    for (i = 0; array.length > i; i++) {\n        if (array[i].meta.hash.data === hash) {\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\n * Gets the index of a transaction in an array of transactions.\n * It must be present in the array.\n *\n * @param {string} hash - A transaction hash\n * @param {array} array - An array of transactions\n *\n * @return {number} - The index of the transaction\n */\nlet getTransactionIndex = function(hash, array) {\n    let i = null;\n    for (i = 0; array.length > i; i++) {\n        if (array[i].meta.hash.data === hash) {\n            return i;\n        }\n    }\n    return 0;\n};\n\n/**\n * Check if a cosignatory is already present in modifications array\n *\n * @param {string} pubKey - A cosignatory public key\n * @param {array} array - A modifications array\n *\n * @return {boolean} - True if present, false otherwise\n */\nlet haveCosig = function(pubKey, array) {\n    let i = null;\n    for (i = 0; array.length > i; i++) {\n        if (array[i].cosignatoryAccount === pubKey) {\n            return true;\n        }\n    }\n    return false;\n};\n\n/***\n * NEM epoch time\n *\n * @type {number}\n */\nlet NEM_EPOCH = Date.UTC(2015, 2, 29, 0, 6, 25, 0);\n\n/**\n * Create a time stamp for a NEM transaction\n *\n * @return {number} - The NEM transaction time stamp in milliseconds\n */\nlet createNEMTimeStamp = function() {\n    return Math.floor((Date.now() / 1000) - (NEM_EPOCH / 1000));\n}\n\n/**\n * Fix a private key\n *\n * @param {string} privatekey - An hex private key\n *\n * @return {string} - The fixed hex private key\n */\nlet fixPrivateKey = function(privateKey) {\n    return (\"0000000000000000000000000000000000000000000000000000000000000000\" + privateKey.replace(/^00/, '')).slice(-64);\n}\n\n/**\n * Check if a private key is valid\n *\n * @param {string} privatekey - A private key\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet isPrivateKeyValid = function(privateKey) {\n    if (privateKey.length !== 64 && privateKey.length !== 66) {\n        console.error('Private key length must be 64 or 66 characters !');\n        return false;\n    } else if (!isHexadecimal(privateKey)) {\n        console.error('Private key must be hexadecimal only !');\n        return false;\n    } else {\n        return true;\n    }\n}\n\n/**\n * Check if a public key is valid\n *\n * @param {string} publicKey - A public key\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet isPublicKeyValid = function(publicKey) {\n    if (publicKey.length !== 64) {\n        console.error('Public key length must be 64 or 66 characters !');\n        return false;\n    } else if (!isHexadecimal(publicKey)) {\n        console.error('Public key must be hexadecimal only !');\n        return false;\n    } else {\n        return true;\n    }\n}\n \n/**\n * Create a time stamp\n *\n * @return {object} - A date object\n */\nlet createTimeStamp = function() {\n    return new Date();\n}\n\n/**\n * Date object to YYYY-MM-DD format\n *\n * @param {object} date - A date object\n *\n * @return {string} - The short date\n */\nlet getTimestampShort = function(date) {\n    let dd = date.getDate();\n    let mm = date.getMonth() + 1; //January is 0!\n    let yyyy = date.getFullYear();\n\n    if (dd < 10) {\n        dd = '0' + dd\n    }\n\n    if (mm < 10) {\n        mm = '0' + mm\n    }\n\n    return yyyy + '-' + mm + '-' + dd;\n};\n\n/**\n * Date object to date string\n *\n * @param {object} date - A date object\n *\n * @return {string} - The date string\n */\nlet convertDateToString = function(date) {\n    return date.toDateString();\n};\n\n/**\n * Mimics jQuery's extend function\n *\n * http://stackoverflow.com/a/11197343\n */\nlet extendObj = function(){\n    for(var i=1; i<arguments.length; i++) {\n        for(var key in arguments[i]) {\n            if(arguments[i].hasOwnProperty(key)) {\n                arguments[0][key] = arguments[i][key];\n            }\n        }\n    }\n    return arguments[0];\n}\n\n/**\n * Test if a string is hexadecimal\n *\n * @param {string} str - A string to test\n *\n * @return {boolean} - True if correct, false otherwise\n */\nlet isHexadecimal = function(str) {\n    return str.match('^(0x|0X)?[a-fA-F0-9]+$') !== null;\n}\n\n/**\n * Search for mosaic definition(s) into an array of mosaicDefinition objects\n *\n * @param {array} mosaicDefinitionArray - An array of mosaicDefinition objects\n * @param {array} keys - Array of strings with names of the mosaics to find (['eur', 'usd',...])\n *\n * @return {object} - An object of mosaicDefinition objects\n */\nlet searchMosaicDefinitionArray = function(mosaicDefinitionArray, keys) {\n    let result = {}\n    for (let i = 0; i < keys.length; i++) {\n        for(let k = 0; k < mosaicDefinitionArray.length; k++) {\n            if(mosaicDefinitionArray[k].mosaic.id.name === keys[i]) {\n                result[Format.mosaicIdToName(mosaicDefinitionArray[k].mosaic.id)] = mosaicDefinitionArray[k].mosaic;\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Mimics jQuery's grep function\n */\nlet grep = function(items, callback) {\n    var filtered = [],\n        len = items.length,\n        i = 0;\n    for (i; i < len; i++) {\n        var item = items[i];\n        var cond = callback(item);\n        if (cond) {\n            filtered.push(item);\n        }\n    }\n\n    return filtered;\n};\n\n/**\n * Check if a text input amount is valid\n *\n * @param {string} n - The number as a string\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet isTextAmountValid = function(n) {\n    // Force n as a string and replace decimal comma by a dot if any\n    var nn = Number(n.toString().replace(/,/g, '.'));\n    return !Number.isNaN(nn) && Number.isFinite(nn) && nn >= 0;\n}\n\n/**\n * Clean a text input amount and return it as number\n *\n * @param {string} n - The number as a string\n *\n * @return {number} - The clean amount\n */\nlet cleanTextAmount = function(n) {\n    return Number(n.toString().replace(/,/g, '.'));\n}\n\n/**\n * Convert an endpoint object to an endpoint url\n *\n * @param {object} endpoint - An endpoint object\n *\n * @return {String} - An endpoint url\n */\nlet formatEndpoint = function(endpoint) {\n    return endpoint.host + ':' + endpoint.port;\n}\n\n/**\n * Check if data is JSON\n *\n * @param {anything} data - Data to test\n *\n * @return {boolean} - True if JSON, false otherwise\n */\nlet isJSON = function(data) {\n    try {\n        JSON.parse(data);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\nmodule.exports = {\n    needsSignature,\n    haveTx,\n    getTransactionIndex,\n    haveCosig,\n    createNEMTimeStamp,\n    fixPrivateKey,\n    isPrivateKeyValid,\n    isPublicKeyValid,\n    createTimeStamp,\n    getTimestampShort,\n    convertDateToString,\n    extendObj,\n    isHexadecimal,\n    searchMosaicDefinitionArray,\n    grep,\n    isTextAmountValid,\n    cleanTextAmount,\n    formatEndpoint,\n    isJSON\n}"]}