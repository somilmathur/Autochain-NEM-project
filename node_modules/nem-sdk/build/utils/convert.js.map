{"version":3,"sources":["../../src/utils/convert.js"],"names":["_hexEncodeArray","hex2ua_reversed","hexx","hex","toString","ua","Uint8Array","length","i","parseInt","substr","hex2ua","ua2hex","s","code","hex2a","str","String","fromCharCode","utf8ToHex","rawString","rstr2utf8","strlpad","charCodeAt","pad","len","ua2words","uaLength","temp","x","push","CryptoJS","lib","WordArray","create","words2ua","destUa","cryptowords","v","words","input","output","n","c","utf82rstr","c1","c2","c3","module","exports"],"mappings":"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","file":"convert.js","sourcesContent":["import CryptoJS from 'crypto-js';\n\nconst _hexEncodeArray = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n/**\n* Reversed convertion of hex to Uint8Array\n*\n* @param {string} hexx - An hex string\n*\n* @return {Uint8Array}\n*/\nlet hex2ua_reversed = function(hexx) {\n    let hex = hexx.toString(); //force conversion\n    let ua = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < hex.length; i += 2) {\n        ua[ua.length - 1 - (i / 2)] = parseInt(hex.substr(i, 2), 16);\n    }\n    return ua;\n};\n\n/**\n* Convert hex to Uint8Array\n*\n* @param {string} hexx - An hex string\n*\n* @return {Uint8Array}\n*/\nlet hex2ua = function(hexx) {\n    let hex = hexx.toString(); //force conversion\n    let ua = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < hex.length; i += 2) {\n        ua[i / 2] = parseInt(hex.substr(i, 2), 16);\n    }\n    return ua;\n};\n\n/**\n* Convert an Uint8Array to hex\n*\n* @param {Uint8Array} ua - An Uint8Array\n*\n* @return {string}\n*/\nlet ua2hex = function(ua) {\n    let s = '';\n    for (let i = 0; i < ua.length; i++) {\n        let code = ua[i];\n        s += _hexEncodeArray[code >>> 4];\n        s += _hexEncodeArray[code & 0x0F];\n    }\n    return s;\n};\n\n/**\n* Convert hex to string\n*\n* @param {string} hexx - An hex string\n*\n* @return {string}\n*/\nlet hex2a = function(hexx) {\n    let hex = hexx.toString();\n    let str = '';\n    for (let i = 0; i < hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n};\n\n/**\n* Convert UTF-8 to hex\n*\n* @param {string} str - An UTF-8 string\n*\n* @return {string}\n*/\nlet utf8ToHex = function(str) {\n    let rawString = rstr2utf8(str);\n    let hex = \"\";\n    for (var i = 0; i < rawString.length; i++) {\n        hex += strlpad(rawString.charCodeAt(i).toString(16), \"0\", 2)\n    }\n    return hex;\n};\n\n// Padding helper for above function\nlet strlpad = function(str, pad, len) {\n    while (str.length < len) {\n        str = pad + str;\n    }\n    return str;\n}\n\n/**\n* Convert an Uint8Array to WordArray\n*\n* @param {Uint8Array} ua - An Uint8Array\n* @param {number} uaLength - The Uint8Array length\n*\n* @return {WordArray}\n*/\nlet ua2words = function(ua, uaLength) {\n    let temp = [];\n    for (let i = 0; i < uaLength; i += 4) {\n        let x = ua[i] * 0x1000000 + (ua[i + 1] || 0) * 0x10000 + (ua[i + 2] || 0) * 0x100 + (ua[i + 3] || 0);\n        temp.push((x > 0x7fffffff) ? x - 0x100000000 : x);\n    }\n    return CryptoJS.lib.WordArray.create(temp, uaLength);\n}\n\n/**\n* Convert a wordArray to Uint8Array\n*\n* @param {Uint8Array} destUa - A destination Uint8Array\n* @param {WordArray} cryptowords - A wordArray\n*\n* @return {Uint8Array}\n*/\nlet words2ua = function(destUa, cryptowords) {\n    for (let i = 0; i < destUa.length; i += 4) {\n        let v = cryptowords.words[i / 4];\n        if (v < 0) v += 0x100000000;\n        destUa[i] = (v >>> 24);\n        destUa[i + 1] = (v >>> 16) & 0xff;\n        destUa[i + 2] = (v >>> 8) & 0xff;\n        destUa[i + 3] = v & 0xff;\n    }\n    return destUa;\n}\n\n/**\n* Converts a raw javascript string into a string of single byte characters using utf8 encoding.\n* This makes it easier to perform other encoding operations on the string.\n*\n* @param {string} input - A raw string\n*\n* @return {string} - UTF-8 string\n*/\nlet rstr2utf8 = function (input) {\n    let output = \"\";\n\n    for (let n = 0; n < input.length; n++) {\n        let c = input.charCodeAt(n);\n\n        if (c < 128) {\n            output += String.fromCharCode(c);\n        } else if ((c > 127) && (c < 2048)) {\n            output += String.fromCharCode((c >> 6) | 192);\n            output += String.fromCharCode((c & 63) | 128);\n        } else {\n            output += String.fromCharCode((c >> 12) | 224);\n            output += String.fromCharCode(((c >> 6) & 63) | 128);\n            output += String.fromCharCode((c & 63) | 128);\n        }\n    }\n\n    return output;\n}\n\n// Does the reverse of rstr2utf8.\nlet utf82rstr = function (input) {\n    let output = \"\", i = 0, c = 0, c1 = 0, c2 = 0, c3 = 0;\n\n    while (i < input.length) {\n        c = input.charCodeAt(i);\n\n        if (c < 128) {\n            output += String.fromCharCode(c);\n            i++;\n        } else if ((c > 191) && (c < 224)) {\n            c2 = input.charCodeAt(i + 1);\n            output += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n            i += 2;\n        } else {\n            c2 = input.charCodeAt(i + 1);\n            c3 = input.charCodeAt(i + 2);\n            output += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n            i += 3;\n        }\n    }\n\n    return output;\n}\n\nmodule.exports = {\n    hex2ua_reversed,\n    hex2ua,\n    ua2hex,\n    hex2a,\n    utf8ToHex,\n    ua2words,\n    words2ua,\n    rstr2utf8,\n    utf82rstr\n}\n"]}