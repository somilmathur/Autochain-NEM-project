{"version":3,"sources":["../../../src/com/websockets/errors.js"],"names":["checkReadyState","connector","self","SockJSBrowser","socket","readyState","OPEN","SockJSNode","subscribe","callback","stompClient","data","JSON","parse","body","module","exports"],"mappings":";;AAAA;;AACA;;;;;;AAEA;;;;;;;AAOA,IAAIA,kBAAkB,SAAlBA,eAAkB,CAASC,SAAT,EAAoB;AACzC,MAAIC,OAAOD,SAAX;AACA,MAAIE,iBAAgBD,KAAKE,MAAL,CAAYC,UAAZ,KAA2BF,eAAcG,IAAzD,GAAgEJ,KAAKE,MAAL,CAAYC,UAAZ,KAA2BE,uBAAWD,IAA1G,EAAgH;AACzG,WAAO,KAAP;AACH;AACD,SAAO,IAAP;AACH,CAND;;AAQA;;;;;;;;AAQA,IAAIE,YAAY,SAAZA,SAAY,CAASP,SAAT,EAAoBQ,QAApB,EAA8B;AAC7C,MAAIP,OAAOD,SAAX;AACA,MAAI,CAACD,gBAAgBC,SAAhB,CAAL,EAAiC;AAC1B,WAAO,KAAP;AACH;AACJC,OAAKQ,WAAL,CAAiBF,SAAjB,CAA2B,SAA3B,EAAsC,UAASG,IAAT,EAAe;AAC9CF,aAASG,KAAKC,KAAL,CAAWF,KAAKG,IAAhB,CAAT;AACH,GAFJ;AAGA,CARD;;AAUAC,OAAOC,OAAP,GAAiB;AAChBR,aAAWA;AADK,CAAjB","file":"errors.js","sourcesContent":["import { SockJS as SockJSBrowser } from '../../external/sockjs-0.3.4';\nimport SockJSNode from 'sockjs-client';\n\n/**\n * Check if socket is open\n *\n * @param {object} connector - A connector object\n *\n * @return {boolean} - True if open, false otherwise\n */\nlet checkReadyState = function(connector) {\n\tvar self = connector;\n\tif (SockJSBrowser ? self.socket.readyState !== SockJSBrowser.OPEN : self.socket.readyState !== SockJSNode.OPEN) {\n        return false;\n    } \n    return true;\n}\n\n/**\n * Subscribe to errors channel\n *\n * @param {object} connector - A connector object\n * @param {function} callback - A callback function where data will be received\n *\n * @return the received data in the callback\n */\nlet subscribe = function(connector, callback) {\n\tvar self = connector;\n\tif (!checkReadyState(connector)) {\n        return false;\n    }\n\tself.stompClient.subscribe('/errors', function(data) {\n        callback(JSON.parse(data.body));\n    });\n}\n\nmodule.exports = {\n\tsubscribe: subscribe\n}"]}