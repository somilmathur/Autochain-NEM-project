{"version":3,"sources":["../../../src/com/requests/apostille.js"],"names":["audit","publicKey","data","signedData","options","url","Nodes","apostilleAuditServer","method","headers","Headers","urlEncoded","qs","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;AASA,IAAIA,QAAQ,SAARA,KAAQ,CAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsC;AACjD;AACA,KAAIC,UAAU;AACVC,OAAKC,gBAAMC,oBADD;AAEVC,UAAQ,MAFE;AAGVC,WAASC,kBAAQC,UAHP;AAIVC,MAAI,EAAC,aAAaX,SAAd,EAAyB,QAAQC,IAAjC,EAAsC,cAAcC,UAApD;AAER;AANc,EAAd,CAOA,OAAO,oBAAKC,OAAL,CAAP;AACA,CAVD;;AAYAS,OAAOC,OAAP,GAAiB;AAChBd;AADgB,CAAjB","file":"apostille.js","sourcesContent":["import Send from './send';\nimport Headers from './headers';\nimport Nodes from '../../model/nodes';\n\n/**\n * Audit an apostille file\n *\n * @param {string} publicKey - The signer public key\n * @param {string} data - The file data of audited file\n * @param {string} signedData - The signed data into the apostille transaction message\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet audit = function(publicKey, data, signedData) {\n\t// Configure the request\n\tvar options = {\n\t    url: Nodes.apostilleAuditServer,\n\t    method: 'POST',\n\t    headers: Headers.urlEncoded,\n\t    qs: {'publicKey': publicKey, 'data': data,'signedData': signedData}\n\t}\n\t// Send the request\n\treturn Send(options);\n}\n\nmodule.exports = {\n\taudit\n}"]}