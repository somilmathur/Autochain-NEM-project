{"version":3,"sources":["../../../src/com/requests/transaction.js"],"names":["announce","endpoint","serializedTransaction","options","url","Helpers","formatEndpoint","method","headers","Headers","json","JSON","parse","byHash","txHash","urlEncoded","qs","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,IAAIA,WAAW,SAAXA,QAAW,CAASC,QAAT,EAAmBC,qBAAnB,EAA0C;AACxD;AACA,KAAIC,UAAU;AACVC,OAAKC,kBAAQC,cAAR,CAAuBL,QAAvB,IAAmC,uBAD9B;AAEVM,UAAQ,MAFE;AAGVC,WAASC,kBAAQC,IAAR,CAAaR,qBAAb,CAHC;AAIVQ,QAAMC,KAAKC,KAAL,CAAWV,qBAAX;AAEV;AANc,EAAd,CAOA,OAAO,oBAAKC,OAAL,CAAP;AACA,CAVD;;AAYA;;;;;;;;AAQA,IAAIU,SAAS,SAATA,MAAS,CAASZ,QAAT,EAAmBa,MAAnB,EAA0B;AACtC;AACA,KAAIX,UAAU;AACVC,OAAKC,kBAAQC,cAAR,CAAuBL,QAAvB,IAAmC,kBAD9B;AAEVM,UAAQ,KAFE;AAGVC,WAASC,kBAAQM,UAHP;AAIVC,MAAI,EAAC,QAAQF,MAAT;AAER;AANc,EAAd,CAOA,OAAO,oBAAKX,OAAL,CAAP;AACA,CAVD;;AAYAc,OAAOC,OAAP,GAAiB;AAChBlB,mBADgB;AAEhBa;AAFgB,CAAjB","file":"transaction.js","sourcesContent":["import Send from './send';\nimport Headers from './headers';\nimport Helpers from '../../utils/helpers';\n\n/**\n * Broadcast a transaction to the NEM network\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {object} obj - A RequestAnnounce object\n *\n * @return {object} - A [NemAnnounceResult]{@link http://bob.nem.ninja/docs/#nemAnnounceResult} object\n */\nlet announce = function(endpoint, serializedTransaction) {\n\t// Configure the request\n\tvar options = {\n\t    url: Helpers.formatEndpoint(endpoint) + '/transaction/announce',\n\t    method: 'POST',\n\t    headers: Headers.json(serializedTransaction),\n\t    json: JSON.parse(serializedTransaction)\n\t}\n\t// Send the request\n\treturn Send(options);\n}\n\n/**\n * Gets a TransactionMetaDataPair object from the chain using it's hash\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {string} txHash - A transaction hash\n *\n * @return {object} - A [TransactionMetaDataPair]{@link http://bob.nem.ninja/docs/#transactionMetaDataPair} object\n */\nlet byHash = function(endpoint, txHash){\n\t// Configure the request\n\tvar options = {\n\t    url: Helpers.formatEndpoint(endpoint) + '/transaction/get',\n\t    method: 'GET',\n\t    headers: Headers.urlEncoded,\n\t    qs: {'hash': txHash}\n\t}\n\t// Send the request\n\treturn Send(options);\n}\n\nmodule.exports = {\n\tannounce,\n\tbyHash\n}"]}